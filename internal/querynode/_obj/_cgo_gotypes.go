// Code generated by cmd/cgo; DO NOT EDIT.

package querynode

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_CCollection unsafe.Pointer

type _Ctype_CLoadDeletedRecordInfo = _Ctype_struct_CLoadDeletedRecordInfo

type _Ctype_CLoadFieldDataInfo = _Ctype_struct_CLoadFieldDataInfo

type _Ctype_CLoadIndexInfo unsafe.Pointer

type _Ctype_CPlaceholderGroup unsafe.Pointer

type _Ctype_CProto = _Ctype_struct_CProto

type _Ctype_CRetrievePlan unsafe.Pointer

type _Ctype_CRetrieveResult = _Ctype_struct_CProto

type _Ctype_CSearchPlan unsafe.Pointer

type _Ctype_CSearchResult unsafe.Pointer

type _Ctype_CSegmentInterface unsafe.Pointer

type _Ctype_CStatus = _Ctype_struct_CStatus

type _Ctype_SegmentType uint32

type _Ctype__GoBytes_ []byte

type _Ctype___int32_t = _Ctype_int

type _Ctype___int64_t = _Ctype_long

type _Ctype___uint64_t = _Ctype_ulong

type _Ctype_char int8

type _Ctype_int int32

type _Ctype_int32_t = _Ctype___int32_t

type _Ctype_int64_t = _Ctype___int64_t

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_struct_CLoadDeletedRecordInfo struct {
	timestamps	unsafe.Pointer
	primary_keys	unsafe.Pointer
	row_count	_Ctype_int64_t
}

type _Ctype_struct_CLoadFieldDataInfo struct {
	field_id	_Ctype_int64_t
	blob		unsafe.Pointer
	row_count	_Ctype_int64_t
}

type _Ctype_struct_CProto struct {
	proto_blob	unsafe.Pointer
	proto_size	_Ctype_int64_t
}

type _Ctype_struct_CStatus struct {
	error_code	_Ctype_int
	error_msg	*_Ctype_char
}

type _Ctype_uint64_t = _Ctype___uint64_t

type _Ctype_ulong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})
const _Ciconst_Growing = 0x1
const _Ciconst_Sealed = 0x2

//go:cgo_import_static _cgo_89063a6c14da_Cfunc_Delete
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_Delete _cgo_89063a6c14da_Cfunc_Delete
var __cgofn__cgo_89063a6c14da_Cfunc_Delete byte
var _cgo_89063a6c14da_Cfunc_Delete = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_Delete)

//go:cgo_unsafe_args
func _Cfunc_Delete(p0 _Ctype_CSegmentInterface, p1 _Ctype_int64_t, p2 _Ctype_int64_t, p3 *_Ctype_int64_t, p4 *_Ctype_uint64_t) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_Delete, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_DeleteSegment
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_DeleteSegment _cgo_89063a6c14da_Cfunc_DeleteSegment
var __cgofn__cgo_89063a6c14da_Cfunc_DeleteSegment byte
var _cgo_89063a6c14da_Cfunc_DeleteSegment = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_DeleteSegment)

//go:cgo_unsafe_args
func _Cfunc_DeleteSegment(p0 _Ctype_CSegmentInterface) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_DeleteSegment, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_GetDeletedCount
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_GetDeletedCount _cgo_89063a6c14da_Cfunc_GetDeletedCount
var __cgofn__cgo_89063a6c14da_Cfunc_GetDeletedCount byte
var _cgo_89063a6c14da_Cfunc_GetDeletedCount = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_GetDeletedCount)

//go:cgo_unsafe_args
func _Cfunc_GetDeletedCount(p0 _Ctype_CSegmentInterface) (r1 _Ctype_int64_t) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_GetDeletedCount, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes _cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes
var __cgofn__cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes byte
var _cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes)

//go:cgo_unsafe_args
func _Cfunc_GetMemoryUsageInBytes(p0 _Ctype_CSegmentInterface) (r1 _Ctype_int64_t) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_GetMemoryUsageInBytes, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_GetRowCount
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_GetRowCount _cgo_89063a6c14da_Cfunc_GetRowCount
var __cgofn__cgo_89063a6c14da_Cfunc_GetRowCount byte
var _cgo_89063a6c14da_Cfunc_GetRowCount = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_GetRowCount)

//go:cgo_unsafe_args
func _Cfunc_GetRowCount(p0 _Ctype_CSegmentInterface) (r1 _Ctype_int64_t) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_GetRowCount, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}

//go:linkname _cgo_runtime_gobytes runtime.gobytes
func _cgo_runtime_gobytes(unsafe.Pointer, int) []byte

func _Cfunc_GoBytes(p unsafe.Pointer, l _Ctype_int) []byte {
	return _cgo_runtime_gobytes(p, int(l))
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_Insert
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_Insert _cgo_89063a6c14da_Cfunc_Insert
var __cgofn__cgo_89063a6c14da_Cfunc_Insert byte
var _cgo_89063a6c14da_Cfunc_Insert = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_Insert)

//go:cgo_unsafe_args
func _Cfunc_Insert(p0 _Ctype_CSegmentInterface, p1 _Ctype_int64_t, p2 _Ctype_int64_t, p3 *_Ctype_int64_t, p4 *_Ctype_uint64_t, p5 unsafe.Pointer, p6 _Ctype_int, p7 _Ctype_int64_t) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_Insert, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
		_Cgo_use(p6)
		_Cgo_use(p7)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_LoadDeletedRecord
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_LoadDeletedRecord _cgo_89063a6c14da_Cfunc_LoadDeletedRecord
var __cgofn__cgo_89063a6c14da_Cfunc_LoadDeletedRecord byte
var _cgo_89063a6c14da_Cfunc_LoadDeletedRecord = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_LoadDeletedRecord)

//go:cgo_unsafe_args
func _Cfunc_LoadDeletedRecord(p0 _Ctype_CSegmentInterface, p1 _Ctype_struct_CLoadDeletedRecordInfo) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_LoadDeletedRecord, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_LoadFieldData
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_LoadFieldData _cgo_89063a6c14da_Cfunc_LoadFieldData
var __cgofn__cgo_89063a6c14da_Cfunc_LoadFieldData byte
var _cgo_89063a6c14da_Cfunc_LoadFieldData = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_LoadFieldData)

//go:cgo_unsafe_args
func _Cfunc_LoadFieldData(p0 _Ctype_CSegmentInterface, p1 _Ctype_struct_CLoadFieldDataInfo) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_LoadFieldData, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_NewSegment
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_NewSegment _cgo_89063a6c14da_Cfunc_NewSegment
var __cgofn__cgo_89063a6c14da_Cfunc_NewSegment byte
var _cgo_89063a6c14da_Cfunc_NewSegment = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_NewSegment)

//go:cgo_unsafe_args
func _Cfunc_NewSegment(p0 _Ctype_CCollection, p1 _Ctype_SegmentType, p2 _Ctype_int64_t) (r1 _Ctype_CSegmentInterface) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_NewSegment, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_PreDelete
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_PreDelete _cgo_89063a6c14da_Cfunc_PreDelete
var __cgofn__cgo_89063a6c14da_Cfunc_PreDelete byte
var _cgo_89063a6c14da_Cfunc_PreDelete = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_PreDelete)

//go:cgo_unsafe_args
func _Cfunc_PreDelete(p0 _Ctype_CSegmentInterface, p1 _Ctype_int64_t) (r1 _Ctype_int64_t) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_PreDelete, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_PreInsert
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_PreInsert _cgo_89063a6c14da_Cfunc_PreInsert
var __cgofn__cgo_89063a6c14da_Cfunc_PreInsert byte
var _cgo_89063a6c14da_Cfunc_PreInsert = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_PreInsert)

//go:cgo_unsafe_args
func _Cfunc_PreInsert(p0 _Ctype_CSegmentInterface, p1 _Ctype_int64_t, p2 *_Ctype_int64_t) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_PreInsert, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_Retrieve
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_Retrieve _cgo_89063a6c14da_Cfunc_Retrieve
var __cgofn__cgo_89063a6c14da_Cfunc_Retrieve byte
var _cgo_89063a6c14da_Cfunc_Retrieve = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_Retrieve)

//go:cgo_unsafe_args
func _Cfunc_Retrieve(p0 _Ctype_CSegmentInterface, p1 _Ctype_CRetrievePlan, p2 _Ctype_uint64_t, p3 *_Ctype_struct_CProto) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_Retrieve, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_Search
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_Search _cgo_89063a6c14da_Cfunc_Search
var __cgofn__cgo_89063a6c14da_Cfunc_Search byte
var _cgo_89063a6c14da_Cfunc_Search = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_Search)

//go:cgo_unsafe_args
func _Cfunc_Search(p0 _Ctype_CSegmentInterface, p1 _Ctype_CSearchPlan, p2 _Ctype_CPlaceholderGroup, p3 _Ctype_uint64_t, p4 *_Ctype_CSearchResult, p5 _Ctype_int64_t) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_Search, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
		_Cgo_use(p4)
		_Cgo_use(p5)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex _cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex
var __cgofn__cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex byte
var _cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex)

//go:cgo_unsafe_args
func _Cfunc_UpdateSealedSegmentIndex(p0 _Ctype_CSegmentInterface, p1 _Ctype_CLoadIndexInfo) (r1 _Ctype_struct_CStatus) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_UpdateSealedSegmentIndex, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_89063a6c14da_Cfunc_free
//go:linkname __cgofn__cgo_89063a6c14da_Cfunc_free _cgo_89063a6c14da_Cfunc_free
var __cgofn__cgo_89063a6c14da_Cfunc_free byte
var _cgo_89063a6c14da_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_89063a6c14da_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_89063a6c14da_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
